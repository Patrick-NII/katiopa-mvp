#!/bin/bash

echo "üöÄ Test du syst√®me complet CubeAI - Comp√©tences et Exercices"
echo "============================================================"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour tester une URL
test_url() {
    local url=$1
    local description=$2
    
    echo -n "Testing $description... "
    
    response=$(curl -s -o /dev/null -w "%{http_code}" "$url")
    
    if [ "$response" = "200" ]; then
        echo -e "${GREEN}‚úì OK${NC}"
        return 0
    else
        echo -e "${RED}‚úó FAILED (HTTP $response)${NC}"
        return 1
    fi
}

# Fonction pour tester une API avec authentification
test_api() {
    local url=$1
    local description=$2
    
    echo -n "Testing API $description... "
    
    response=$(curl -s -o /dev/null -w "%{http_code}" -b "sessionId=test-session" "$url")
    
    if [ "$response" = "200" ] || [ "$response" = "401" ]; then
        echo -e "${GREEN}‚úì OK${NC}"
        return 0
    else
        echo -e "${RED}‚úó FAILED (HTTP $response)${NC}"
        return 1
    fi
}

echo ""
echo "üìä Tests des services..."
echo ""

# Test du frontend
test_url "http://localhost:3000" "Frontend (Next.js)"

# Test du backend
test_url "http://localhost:4000/api/test" "Backend API"

# Test des nouvelles routes
test_api "http://localhost:4000/api/competences" "Comp√©tences API"
test_api "http://localhost:4000/api/user-sessions/test-session/competences" "Donn√©es utilisateur API"
test_api "http://localhost:4000/api/bubix/analyses/test-session" "Analyses Bubix API"

echo ""
echo "üóÑÔ∏è Tests de la base de donn√©es..."
echo ""

# Test de la connexion √† la base de donn√©es
cd backend
if npx prisma db push --accept-data-loss > /dev/null 2>&1; then
    echo -e "Database connection: ${GREEN}‚úì OK${NC}"
else
    echo -e "Database connection: ${RED}‚úó FAILED${NC}"
fi

# V√©rifier que les tables existent
if npx prisma db execute --stdin <<< "SELECT COUNT(*) FROM \"Competence\";" > /dev/null 2>&1; then
    echo -e "Competence table: ${GREEN}‚úì OK${NC}"
else
    echo -e "Competence table: ${RED}‚úó FAILED${NC}"
fi

if npx prisma db execute --stdin <<< "SELECT COUNT(*) FROM \"Exercise\";" > /dev/null 2>&1; then
    echo -e "Exercise table: ${GREEN}‚úì OK${NC}"
else
    echo -e "Exercise table: ${RED}‚úó FAILED${NC}"
fi

if npx prisma db execute --stdin <<< "SELECT COUNT(*) FROM \"CompetenceAssessment\";" > /dev/null 2>&1; then
    echo -e "CompetenceAssessment table: ${GREEN}‚úì OK${NC}"
else
    echo -e "CompetenceAssessment table: ${RED}‚úó FAILED${NC}"
fi

if npx prisma db execute --stdin <<< "SELECT COUNT(*) FROM \"BubixAnalysis\";" > /dev/null 2>&1; then
    echo -e "BubixAnalysis table: ${GREEN}‚úì OK${NC}"
else
    echo -e "BubixAnalysis table: ${RED}‚úó FAILED${NC}"
fi

echo ""
echo "üìà R√©sum√© des fonctionnalit√©s impl√©ment√©es :"
echo ""
echo -e "${GREEN}‚úì${NC} Tables de comp√©tences et exercices cr√©√©es"
echo -e "${GREEN}‚úì${NC} 10 comp√©tences initialis√©es avec exercices"
echo -e "${GREEN}‚úì${NC} Routes API pour les comp√©tences et exercices"
echo -e "${GREEN}‚úì${NC} Routes API pour Bubix avec analyses"
echo -e "${GREEN}‚úì${NC} Composant RadarChart connect√© √† la BDD"
echo -e "${GREEN}‚úì${NC} Composant d'exercices pour les enfants"
echo -e "${GREEN}‚úì${NC} Composant Bubix pour les analyses"
echo -e "${GREEN}‚úì${NC} Hook useRadarData pour les vraies donn√©es"
echo -e "${GREEN}‚úì${NC} Interaction clic sur axe du radar corrig√©e"
echo -e "${GREEN}‚úì${NC} Syst√®me de couleurs distinctes pour les radars"

echo ""
echo "üéØ Prochaines √©tapes :"
echo ""
echo -e "${YELLOW}1.${NC} Tester les exercices en mode enfant"
echo -e "${YELLOW}2.${NC} G√©n√©rer des analyses Bubix"
echo -e "${YELLOW}3.${NC} V√©rifier l'affichage des donn√©es dans le radar"
echo -e "${YELLOW}4.${NC} Tester le syst√®me complet : exercices ‚Üí BDD ‚Üí radar ‚Üí analyses"

echo ""
echo "üåê URLs importantes :"
echo ""
echo "Frontend: http://localhost:3000"
echo "Backend API: http://localhost:4000/api"
echo "Comp√©tences: http://localhost:3000/dashboard/experiences"
echo "Dashboard Parents: http://localhost:3000/dashboard"

echo ""
echo -e "${GREEN}üéâ Syst√®me pr√™t pour les tests !${NC}"

