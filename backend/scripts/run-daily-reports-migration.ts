#!/usr/bin/env node

/**
 * Script pour ex√©cuter la migration des tables de rapports quotidiens
 */

import { PrismaClient } from '@prisma/client';
import fs from 'fs';
import path from 'path';

const prisma = new PrismaClient();

async function runDailyReportsMigration() {
  console.log('üöÄ D√©marrage de la migration des tables de rapports quotidiens...');

  try {
    // Lire le fichier de migration SQL
    const migrationPath = path.join(__dirname, '../../migrations/create_daily_reports_tables.sql');
    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');

    // Ex√©cuter la migration
    await prisma.$executeRawUnsafe(migrationSQL);

    console.log('‚úÖ Migration des tables de rapports quotidiens termin√©e avec succ√®s');

    // V√©rifier que les tables ont √©t√© cr√©√©es
    const tables = await prisma.$queryRaw`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name IN ('user_sessions', 'learning_events', 'quiz_results', 'session_stats_daily', 'daily_reports', 'report_preferences')
    `;

    console.log('üìã Tables cr√©√©es:', tables);

    // V√©rifier que la fonction SQL a √©t√© cr√©√©e
    const functions = await prisma.$queryRaw`
      SELECT routine_name 
      FROM information_schema.routines 
      WHERE routine_schema = 'public' 
      AND routine_name = 'calculate_daily_stats'
    `;

    console.log('üîß Fonctions cr√©√©es:', functions);

    // Test de la fonction de calcul des stats
    console.log('üß™ Test de la fonction calculate_daily_stats...');
    await prisma.$executeRaw`SELECT calculate_daily_stats(CURRENT_DATE)`;
    console.log('‚úÖ Fonction test√©e avec succ√®s');

    // G√©n√©rer le client Prisma
    console.log('üîÑ G√©n√©ration du client Prisma...');
    await prisma.$executeRaw`SELECT 1`; // Test de connexion

    console.log('‚úÖ Migration compl√®te termin√©e');
  } catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter la migration si le script est appel√© directement
if (require.main === module) {
  runDailyReportsMigration();
}

export { runDailyReportsMigration };
