import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

const competences = [
  {
    type: 'MATHEMATIQUES',
    name: 'Math√©matiques',
    description: 'Comp√©tences en calcul, g√©om√©trie et r√©solution de probl√®mes math√©matiques',
    icon: 'üî¢',
    color: '#3B82F6',
    exercises: [
      {
        title: 'Calcul Mental Rapide',
        description: 'R√©solvez des op√©rations math√©matiques de base en temps limit√©',
        type: 'QUIZ',
        difficulty: 2,
        estimatedTime: 5,
        instructions: {
          text: 'R√©solvez le plus rapidement possible les op√©rations affich√©es',
          rules: ['Temps limit√© : 30 secondes par question', 'Score bas√© sur la rapidit√© et la pr√©cision']
        },
        content: {
          questions: [
            { question: '7 + 8 = ?', options: ['15', '16', '14', '13'], correct: 0 },
            { question: '12 √ó 3 = ?', options: ['36', '35', '37', '38'], correct: 0 },
            { question: '45 √∑ 9 = ?', options: ['5', '6', '4', '7'], correct: 0 }
          ]
        }
      },
      {
        title: 'G√©om√©trie Spatiale',
        description: 'Reconnaissance de formes et calculs d\'aires',
        type: 'INTERACTIF',
        difficulty: 3,
        estimatedTime: 10,
        instructions: {
          text: 'Identifiez les formes et calculez leurs propri√©t√©s',
          rules: ['Cliquez sur la bonne r√©ponse', 'Utilisez les formules g√©om√©triques']
        },
        content: {
          shapes: [
            { type: 'cercle', radius: 5, question: 'Quelle est l\'aire de ce cercle ?' },
            { type: 'rectangle', width: 8, height: 6, question: 'Quel est le p√©rim√®tre ?' }
          ]
        }
      }
    ]
  },
  {
    type: 'PROGRAMMATION',
    name: 'Programmation',
    description: 'Logique algorithmique et r√©solution de probl√®mes informatiques',
    icon: 'üíª',
    color: '#8B5CF6',
    exercises: [
      {
        title: 'S√©quence d\'Instructions',
        description: 'Organisez les instructions dans le bon ordre',
        type: 'INTERACTIF',
        difficulty: 2,
        estimatedTime: 8,
        instructions: {
          text: 'Glissez les instructions dans le bon ordre pour cr√©er un programme',
          rules: ['Chaque instruction doit √™tre dans l\'ordre logique', 'Testez votre programme']
        },
        content: {
          instructions: [
            'D√©clarer une variable',
            'Assigner une valeur',
            'Afficher le r√©sultat',
            'Fermer le programme'
          ]
        }
      },
      {
        title: 'Boucles et Conditions',
        description: 'Comprenez les structures de contr√¥le',
        type: 'QUIZ',
        difficulty: 3,
        estimatedTime: 12,
        instructions: {
          text: 'R√©pondez aux questions sur les boucles et conditions',
          rules: ['Une seule r√©ponse correcte par question', 'Expliquez votre raisonnement']
        },
        content: {
          questions: [
            { question: 'Quand utilise-t-on une boucle FOR ?', options: ['Pour r√©p√©ter un nombre fixe de fois', 'Pour des conditions complexes', 'Pour des calculs', 'Pour afficher du texte'], correct: 0 }
          ]
        }
      }
    ]
  },
  {
    type: 'CREATIVITE',
    name: 'Cr√©ativit√©',
    description: 'Expression artistique et pens√©e cr√©ative',
    icon: 'üé®',
    color: '#EC4899',
    exercises: [
      {
        title: 'Dessin Libre',
        description: 'Cr√©ez une ≈ìuvre d\'art num√©rique',
        type: 'CREATIF',
        difficulty: 1,
        estimatedTime: 15,
        instructions: {
          text: 'Utilisez les outils de dessin pour cr√©er votre ≈ìuvre',
          rules: ['Laissez libre cours √† votre imagination', 'Utilisez au moins 3 couleurs diff√©rentes']
        },
        content: {
          tools: ['pinceau', 'crayon', 'gomme', 'palette'],
          canvas: { width: 400, height: 300 }
        }
      },
      {
        title: 'Histoire Interactive',
        description: 'Cr√©ez une histoire avec des choix multiples',
        type: 'CREATIF',
        difficulty: 3,
        estimatedTime: 20,
        instructions: {
          text: '√âcrivez une histoire avec des branches narratives',
          rules: ['Minimum 3 choix par √©tape', 'Histoire coh√©rente et engageante']
        },
        content: {
          template: {
            start: 'Il √©tait une fois...',
            branches: 3,
            endings: 2
          }
        }
      }
    ]
  },
  {
    type: 'COLLABORATION',
    name: 'Collaboration',
    description: 'Travail en √©quipe et communication interpersonnelle',
    icon: 'ü§ù',
    color: '#10B981',
    exercises: [
      {
        title: 'Projet en √âquipe',
        description: 'Collaborez sur un projet commun',
        type: 'COLLABORATIF',
        difficulty: 4,
        estimatedTime: 25,
        instructions: {
          text: 'Travaillez ensemble pour r√©soudre un d√©fi',
          rules: ['Chaque membre a un r√¥le sp√©cifique', 'Communication obligatoire']
        },
        content: {
          roles: ['Chef de projet', 'D√©veloppeur', 'Designer', 'Testeur'],
          challenge: 'Cr√©er un jeu simple en √©quipe'
        }
      }
    ]
  },
  {
    type: 'CONCENTRATION',
    name: 'Concentration',
    description: 'Attention soutenue et focus',
    icon: 'üéØ',
    color: '#F59E0B',
    exercises: [
      {
        title: 'M√©moire Visuelle',
        description: 'M√©morisez et reproduisez des s√©quences',
        type: 'PRATIQUE',
        difficulty: 2,
        estimatedTime: 10,
        instructions: {
          text: 'Observez la s√©quence puis reproduisez-la',
          rules: ['Temps limit√© pour l\'observation', 'Pr√©cision requise']
        },
        content: {
          sequences: [
            { colors: ['rouge', 'bleu', 'vert', 'jaune'], duration: 5 },
            { shapes: ['cercle', 'carr√©', 'triangle'], duration: 3 }
          ]
        }
      }
    ]
  },
  {
    type: 'RESOLUTION_PROBLEMES',
    name: 'R√©solution de probl√®mes',
    description: 'Analyse et r√©solution de d√©fis complexes',
    icon: 'üß©',
    color: '#06B6D4',
    exercises: [
      {
        title: '√ânigmes Logiques',
        description: 'R√©solvez des √©nigmes √©tape par √©tape',
        type: 'REFLEXION',
        difficulty: 3,
        estimatedTime: 15,
        instructions: {
          text: 'Analysez le probl√®me et trouvez la solution',
          rules: ['Prenez votre temps', 'Expliquez votre raisonnement']
        },
        content: {
          puzzles: [
            {
              problem: 'Un fermier a 17 moutons. Tous sauf 9 meurent. Combien en reste-t-il ?',
              hint: 'Attention aux mots !',
              solution: '9'
            }
          ]
        }
      }
    ]
  },
  {
    type: 'COMMUNICATION',
    name: 'Communication',
    description: 'Expression orale et √©crite',
    icon: 'üí¨',
    color: '#84CC16',
    exercises: [
      {
        title: 'Pr√©sentation Orale',
        description: 'Pr√©sentez un sujet devant un public virtuel',
        type: 'PRATIQUE',
        difficulty: 3,
        estimatedTime: 12,
        instructions: {
          text: 'Pr√©parez et pr√©sentez votre sujet',
          rules: ['Clart√© et structure', 'Contact visuel avec le public']
        },
        content: {
          topics: ['Mon animal pr√©f√©r√©', 'Mon sport favori', 'Mon livre pr√©f√©r√©'],
          duration: 3 // minutes
        }
      }
    ]
  },
  {
    type: 'CONNAISSANCES_GENERALES',
    name: 'Connaissances g√©n√©rales',
    description: 'Culture g√©n√©rale et curiosit√© intellectuelle',
    icon: 'üìö',
    color: '#F97316',
    exercises: [
      {
        title: 'Quiz Culturel',
        description: 'Testez vos connaissances dans diff√©rents domaines',
        type: 'QUIZ',
        difficulty: 2,
        estimatedTime: 10,
        instructions: {
          text: 'R√©pondez aux questions de culture g√©n√©rale',
          rules: ['Une seule r√©ponse par question', 'Pas de limite de temps']
        },
        content: {
          categories: ['Histoire', 'G√©ographie', 'Sciences', 'Arts'],
          questions: [
            { question: 'Quelle est la capitale de la France ?', options: ['Lyon', 'Paris', 'Marseille', 'Toulouse'], correct: 1 }
          ]
        }
      }
    ]
  },
  {
    type: 'SENS_CRITIQUE',
    name: 'Sens critique',
    description: 'Analyse et √©valuation d\'informations',
    icon: 'üîç',
    color: '#EF4444',
    exercises: [
      {
        title: 'Vrai ou Faux',
        description: 'Analysez la v√©racit√© d\'affirmations',
        type: 'REFLEXION',
        difficulty: 3,
        estimatedTime: 8,
        instructions: {
          text: 'D√©terminez si les affirmations sont vraies ou fausses',
          rules: ['Justifiez votre r√©ponse', 'Recherchez des sources']
        },
        content: {
          statements: [
            { text: 'La Terre tourne autour du Soleil', correct: true },
            { text: 'L\'eau bout √† 50¬∞C', correct: false }
          ]
        }
      }
    ]
  },
  {
    type: 'REFLEXION_LOGIQUE',
    name: 'R√©flexion logique & strat√©gique',
    description: 'Pens√©e strat√©gique et planification',
    icon: '‚ö°',
    color: '#8B5CF6',
    exercises: [
      {
        title: 'Jeu de Strat√©gie',
        description: 'Planifiez vos mouvements dans un jeu tactique',
        type: 'REFLEXION',
        difficulty: 4,
        estimatedTime: 20,
        instructions: {
          text: 'Anticipez les mouvements adverses et planifiez votre strat√©gie',
          rules: ['Pensez plusieurs coups √† l\'avance', 'Adaptez-vous aux changements']
        },
        content: {
          game: '√âchecs simplifi√©s',
          pieces: ['Pion', 'Tour', 'Fou', 'Reine'],
          objective: '√âchec et mat'
        }
      }
    ]
  }
]

async function initCompetencesAndExercises() {
  try {
    console.log('üöÄ Initialisation des comp√©tences et exercices...')

    for (const competenceData of competences) {
      const { exercises, ...competenceInfo } = competenceData

      // Cr√©er la comp√©tence
      const competence = await prisma.competence.upsert({
        where: { type: competenceInfo.type },
        update: competenceInfo,
        create: competenceInfo
      })

      console.log(`‚úÖ Comp√©tence cr√©√©e : ${competence.name}`)

      // Cr√©er les exercices pour cette comp√©tence
      for (const exerciseData of exercises) {
        await prisma.exercise.upsert({
          where: {
            competenceId_title: {
              competenceId: competence.id,
              title: exerciseData.title
            }
          },
          update: exerciseData,
          create: {
            ...exerciseData,
            competenceId: competence.id
          }
        })

        console.log(`  üìù Exercice cr√©√© : ${exerciseData.title}`)
      }
    }

    console.log('üéâ Initialisation termin√©e avec succ√®s !')
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation :', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Ex√©cuter le script
initCompetencesAndExercises()
